# -*- coding: utf-8 -*-
"""optimized_colab.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/neonsecret/stable-diffusion/blob/main/optimized_colab.ipynb

This colab requires you to have model.ckpt on your google drive (or you can download it on the next step)
"""

!git clone https://github.com/neonsecret/stable-diffusion.git
!pip install gradio  albumentations diffusers opencv-python pudb invisible-watermark imageio imageio-ffmpeg pytorch-lightning omegaconf test-tube streamlit einops torch-fidelity transformers torchmetrics kornia
!pip install -e git+https://github.com/CompVis/taming-transformers.git@master#egg=taming-transformers
!pip install -e git+https://github.com/openai/CLIP.git@main#egg=clip
!pip install git+https://github.com/crowsonkb/k-diffusion

# Commented out IPython magic to ensure Python compatibility.
# %cd stable-diffusion
!pip install -e .

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
#@markdown # Load the stable-diffusion model

#@markdown **Download the model if it isn't already in the 'models_path' folder**

#@markdown To download the model, you need to have accepted the terms [HERE](https://huggingface.co/CompVis/stable-diffusion-v1-4)
#@markdown and have copied a token from [HERE](https://huggingface.co/settings/tokens)
download_if_missing = True #@param {type:"boolean"}
token = "" #@param {type:"string"}

#@markdown **Google Drive Path Variables**
mount_google_drive = True #@param {type:"boolean"}
force_remount = False

# %cd /content/
import os
mount_success = True
if mount_google_drive:
    # from google.colab import drive
    try:
        drive_path = "/content/drive"
        # drive.mount(drive_path,force_remount=force_remount)
        models_path_gdrive = "model" #@param {type:"string"}
        output_path_gdrive = "outputs" #@param {type:"string"}
        models_path = models_path_gdrive
        output_path = output_path_gdrive
    except:
        print("...error mounting drive or with drive path variables")
        print("...reverting to default path variables")
        mount_success = False
        output_path = "outputs"

os.makedirs(models_path, exist_ok=True)
os.makedirs(output_path, exist_ok=True)

# if download_if_missing:
#     if not mount_success:
#         print("Downloading model to " + models_path + " due to gdrive mount error")
#     if token == "":
#         print("No token provided. Assuming model is already in " + models_path)
#     elif not os.path.exists(models_path + '/sd-v1-4.ckpt'):
#         !git lfs install --system --skip-repo
#         !mkdir sd-model
# #         %cd /content/sd-model/
#         !git init
#         !git remote add -f origin "https://USER:{token}@huggingface.co/CompVis/stable-diffusion-v-1-4-original"
#         !git config core.sparsecheckout true
#         !echo "sd-v1-4.ckpt" > .git/info/sparse-checkout
#         !git pull origin main
#         !mv '/content/sd-model/sd-v1-4.ckpt' '{models_path}/'
#     else:
#         print("Model already downloaded, moving to next step")

print(f"models_path: {models_path}")
print(f"output_path: {output_path}")
# %cd /content/stable-diffusion

"""# Okay next run one of the three (img2img, txt2img, inpainting)"""

# Commented out IPython magic to ensure Python compatibility.
#@title Optimized img2img
# %cd /content/stable-diffusion
# ckpt_path = '/content/drive/MyDrive/sd-v1-4.ckpt' #@param {type:"string"}
# !python optimizedSD/img2img_gradio.py --ckpt_path $ckpt_path --outputs_path $output_path

# Commented out IPython magic to ensure Python compatibility.
#@title Optimized txt2img
# D:\projects\stable_diffusion\model\sd-v1-4.ckpt
model/sd-v1-4.ckpt
ckpt_path = 'stable-diffusion/optimizedSD/sd-v1-4.ckpt'  #@param {type:"string"}
# %cd /content/stable-diffusion
!python optimizedSD/txt2img_gradio.py --ckpt_path $ckpt_path --outputs_path $output_path

# Commented out IPython magic to ensure Python compatibility.
#@title Optimized masked img2img (inpainting)
# ckpt_path = '/content/drive/MyDrive/sd-v1-4.ckpt' #@param {type:"string"}
# %cd /content/stable-diffusion
# !python optimizedSD/inpaint_gradio.py --ckpt_path $ckpt_path --outputs_path $output_path